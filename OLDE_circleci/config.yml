# .circleci/config.yml
version: 2.1
orbs:
  aws-ecr: circleci/aws-ecr@7.0.0
jobs:
  # This build job just tests that the binary can build. If your project is a
  # library, not a binary, you don't need this build job. In other words, omit
  # this job if you don't have a func main() in your project.
  build:
    working_directory: ~/repo
    docker:
      - image: golang:1.16-alpine
    steps:
      - checkout
      - restore_cache:
          keys:
            - go-mod-v4-{{ checksum "go.sum" }}
      - run:
          name: Install Dependencies
          command: go mod download
      - save_cache:
          key: go-mod-v4-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"
      - run:
          name: build
          command: go build

  lint:
    docker:
      - image: golangci/golangci-lint:v1.37-alpine
    steps:
      - checkout
      - run: golangci-lint run
  test:
    docker:
      # We use golang:1.16 instead of golang:1.16-alpine because we want to run
      # tests with the race detector enabled. The race detector requires glibc,
      # which is only present in the Debian-based containers.
      - image: golang:1.16
    working_directory: ~/repo
    steps:
      - checkout
      - run: go test -v -race ./...

  dockerimage:
    docker:
      - image: circleci/golang
        auth:
          username: $DOCKERHUB_USER
          password: $DOCKERHUB_PASSWORD  # context / project UI env-var reference
    steps:
      - checkout
      - setup_remote_docker:
          version: 19.03.13
      - run: |
          docker build -t gopython/hr .
          echo $DOCKER_PASS | docker login -u $DOCKERHUB_USER -p $DOCKERHUB_PASSWORD
          docker push gopython/hr

  aws:
    docker:
      - image: circleci/openjdk:8-jdk
    steps:
      - checkout
      - run:
          name: Deploy
          command: |
            # 1- Install AWS CLI
            curl "https://s3.amazonaws.com/aws-cli/awscli-bundle.zip" -o "awscli-bundle.zip"
            unzip awscli-bundle.zip
            ./awscli-bundle/install -b ~/bin/aws
            # 2- Get the public IP of the current CircleCI runner
            PUBLIC_IP=$(curl ipinfo.io/ip)
            # 3- Get AWS Region
            AWS_REGION=us-east-1

            aws configure
            echo $aws_access_key_id
            echo $aws_secret_access_key
            echo us-east-1
            echo
            aws help

workflows:
  build_lint_test:
    jobs:
      - build
      - lint
      - test
      - dockerimage
      - aws