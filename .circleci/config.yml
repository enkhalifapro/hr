# .circleci/config.yml
version: 2.1
orbs:
  aws-ecr: circleci/aws-ecr@7.0.0
  #aws-ecs: circleci/aws-ecs@2.2.1
jobs:
  # This build job just tests that the binary can build. If your project is a
  # library, not a binary, you don't need this build job. In other words, omit
  # this job if you don't have a func main() in your project.
  build:
    working_directory: ~/repo
    docker:
      - image: golang:1.16-alpine
    steps:
      - checkout
      - restore_cache:
          keys:
            - go-mod-v4-{{ checksum "go.sum" }}
      - run:
          name: Install Dependencies
          command: go mod download
      - save_cache:
          key: go-mod-v4-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"
      - run:
          name: build
          command: go build

  lint:
    docker:
      - image: golangci/golangci-lint:v1.37-alpine
    steps:
      - checkout
      - run: golangci-lint run
  test:
    docker:
      # We use golang:1.16 instead of golang:1.16-alpine because we want to run
      # tests with the race detector enabled. The race detector requires glibc,
      # which is only present in the Debian-based containers.
      - image: golang:1.16
    working_directory: ~/repo
    steps:
      - checkout
      - run: go test -v -race ./...

  dockerimage:
    docker:
      - image: circleci/golang
        auth:
          username: gopython
          password: $DOCKERHUB_PASSWORD  # context / project UI env-var reference
    steps:
      - checkout
      - setup_remote_docker:
          version: 19.03.13
      - run: |
          docker build -t gopython/hr .
          echo $DOCKER_PASS | docker login -u gopython -p P@ssw0rd1!
          docker push gopython/hr



workflows:
  build_lint_test:
    jobs:
      - build
      - lint
      - test
      - dockerimage
      - aws-ecr/build-and-push-image:
            account-url: https://831466106657.signin.aws.amazon.com/console?region=us-east-1
            aws-access-key-id: AKIA4DFZ554QRHT6J2W6
            aws-secret-access-key: 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
            context: myContext
            create-repo: true
            dockerfile: Dockerfile
            no-output-timeout: 20m
            path: .
            profile-name: hrprofile
            region: us-east-1
            repo: hr
            skip-when-tags-exist: false
            tag: 'latest,hrTag'